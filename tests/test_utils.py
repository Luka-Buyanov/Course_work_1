from typing import Any
from unittest.mock import patch

import pytest
from freezegun import freeze_time

from src.utils import (action_value, card_information, get_operations, hello_message, top_five, top_transactions,
                       user_options, value_course)


@freeze_time("04:00:00")
def test_night() -> None:
    """Функция проверяющая работу в ночное время"""

    assert hello_message() == "Доброй ночи!"


@freeze_time("08:00:00")
def test_morning() -> None:
    """Функция проверяющая работу в утреннее время"""

    assert hello_message() == "Доброе утро!"


@freeze_time("14:00:00")
def test_day() -> None:
    """Функция проверяющая работу в дневное время"""

    assert hello_message() == "Добрый день!"


@freeze_time("20:00:00")
def test_evening() -> None:
    """Функция проверяющая работу в вечернее время"""

    assert hello_message() == "Добрый вечер!"


@pytest.mark.parametrize(
    "start, end, output",
    [
        (
            "29.12.2021",
            "30.12.2021",
            [
                {
                    "MCC": 4112.0,
                    "Бонусы (включая кэшбэк)": 70,
                    "Валюта операции": "RUB",
                    "Валюта платежа": "RUB",
                    "Дата операции": "29.12.2021 22:32:24",
                    "Дата платежа": "30.12.2021",
                    "Категория": "Ж/д билеты",
                    "Номер карты": "*4556",
                    "Округление на инвесткопилку": 0,
                    "Описание": "РЖД",
                    "Статус": "OK",
                    "Сумма операции": -1411.4,
                    "Сумма операции с округлением": 1411.4,
                    "Сумма платежа": -1411.4,
                },
                {
                    "MCC": 4112.0,
                    "Бонусы (включая кэшбэк)": 70,
                    "Валюта операции": "RUB",
                    "Валюта платежа": "RUB",
                    "Дата операции": "29.12.2021 22:28:47",
                    "Дата платежа": "30.12.2021",
                    "Категория": "Ж/д билеты",
                    "Номер карты": "*4556",
                    "Округление на инвесткопилку": 0,
                    "Описание": "РЖД",
                    "Статус": "OK",
                    "Сумма операции": -1411.4,
                    "Сумма операции с округлением": 1411.4,
                    "Сумма платежа": -1411.4,
                },
                {
                    "MCC": 5814.0,
                    "Бонусы (включая кэшбэк)": 1,
                    "Валюта операции": "RUB",
                    "Валюта платежа": "RUB",
                    "Дата операции": "29.12.2021 16:22:08",
                    "Дата платежа": "29.12.2021",
                    "Категория": "Фастфуд",
                    "Номер карты": "*5091",
                    "Округление на инвесткопилку": 0,
                    "Описание": "Mouse Tail",
                    "Статус": "OK",
                    "Сумма операции": -120.0,
                    "Сумма операции с округлением": 120.0,
                    "Сумма платежа": -120.0,
                },
                {
                    "MCC": 5200.0,
                    "Бонусы (включая кэшбэк)": 7,
                    "Валюта операции": "RUB",
                    "Валюта платежа": "RUB",
                    "Дата операции": "29.12.2021 15:08:20",
                    "Дата платежа": "29.12.2021",
                    "Категория": "Дом и ремонт",
                    "Номер карты": "*7197",
                    "Округление на инвесткопилку": 0,
                    "Описание": "МаксидоМ",
                    "Статус": "OK",
                    "Сумма операции": -383.0,
                    "Сумма операции с округлением": 383.0,
                    "Сумма платежа": -383.0,
                },
                {
                    "MCC": 5200.0,
                    "Бонусы (включая кэшбэк)": 1,
                    "Валюта операции": "RUB",
                    "Валюта платежа": "RUB",
                    "Дата операции": "29.12.2021 14:15:35",
                    "Дата платежа": "29.12.2021",
                    "Категория": "Дом и ремонт",
                    "Номер карты": "*7197",
                    "Округление на инвесткопилку": 0,
                    "Описание": "Леруа Мерлен",
                    "Статус": "OK",
                    "Сумма операции": -67.1,
                    "Сумма операции с округлением": 67.1,
                    "Сумма платежа": -67.1,
                },
            ],
        ),
        ("01.01.0001", "01.01.0002", []),
    ],
)
def test_file_inputs(start: str, end: str, output: list[dict]) -> None:
    """Функция проверяющая работу функции при различных данных"""

    inputs = get_operations(start, end)
    result = []
    for operation in inputs:
        del operation["Кэшбэк"]
        result.append(operation)

    assert result == output


def test_card_information() -> None:
    """Функция проверяющая работу функции card_information"""

    assert card_information(
        [
            {
                "Дата операции": "14.01.2018 14:10:58",
                "Дата платежа": "15.01.2018",
                "Номер карты": "*7197",
                "Статус": "OK",
                "Сумма операции": -1.0,
                "Валюта операции": "EUR",
                "Сумма платежа": -70.2,
                "Валюта платежа": "RUB",
                "Кэшбэк": 0,
                "Категория": "Рестораны",
                "MCC": 5812.0,
                "Описание": "Luhamaa Terminal  kohvik",
                "Бонусы (включая кэшбэк)": 1,
                "Округление на инвесткопилку": 0,
                "Сумма операции с округлением": 70.2,
            },
            {
                "Дата операции": "14.01.2018 10:43:42",
                "Дата платежа": "15.01.2018",
                "Номер карты": "*7197",
                "Статус": "OK",
                "Сумма операции": -1.42,
                "Валюта операции": "EUR",
                "Сумма платежа": -99.68,
                "Валюта платежа": "RUB",
                "Кэшбэк": 0,
                "Категория": "Супермаркеты",
                "MCC": 5411.0,
                "Описание": 'Rimi Hm "Alfa"',
                "Бонусы (включая кэшбэк)": 1,
                "Округление на инвесткопилку": 0,
                "Сумма операции с округлением": 99.68,
            },
            {
                "Дата операции": "12.01.2018 16:38:58",
                "Дата платежа": "15.01.2018",
                "Номер карты": "*7197",
                "Статус": "OK",
                "Сумма операции": -4.62,
                "Валюта операции": "EUR",
                "Сумма платежа": -324.32,
                "Валюта платежа": "RUB",
                "Кэшбэк": 0,
                "Категория": "Различные товары",
                "MCC": 5311.0,
                "Описание": "Maxima Lv R010",
                "Бонусы (включая кэшбэк)": 6,
                "Округление на инвесткопилку": 0,
                "Сумма операции с округлением": 324.32,
            },
            {
                "Дата операции": "12.01.2018 16:15:56",
                "Дата платежа": "15.01.2018",
                "Номер карты": "*7197",
                "Статус": "OK",
                "Сумма операции": -26.56,
                "Валюта операции": "EUR",
                "Сумма платежа": -1864.51,
                "Валюта платежа": "RUB",
                "Кэшбэк": 0,
                "Категория": "Одежда и обувь",
                "MCC": 5641.0,
                "Описание": "Varaviksne-veikals",
                "Бонусы (включая кэшбэк)": 37,
                "Округление на инвесткопилку": 0,
                "Сумма операции с округлением": 1864.51,
            },
            {
                "Дата операции": "12.01.2018 16:04:18",
                "Дата платежа": "15.01.2018",
                "Номер карты": "*7197",
                "Статус": "OK",
                "Сумма операции": -6.96,
                "Валюта операции": "EUR",
                "Сумма платежа": -488.59,
                "Валюта платежа": "RUB",
                "Кэшбэк": 0,
                "Категория": "Одежда и обувь",
                "MCC": 5641.0,
                "Описание": "Varaviksne-veikals",
                "Бонусы (включая кэшбэк)": 9,
                "Округление на инвесткопилку": 0,
                "Сумма операции с округлением": 488.59,
            },
            {
                "Дата операции": "12.01.2018 15:58:01",
                "Дата платежа": "15.01.2018",
                "Номер карты": "*7197",
                "Статус": "OK",
                "Сумма операции": -28.29,
                "Валюта операции": "EUR",
                "Сумма платежа": -1985.96,
                "Валюта платежа": "RUB",
                "Кэшбэк": 0,
                "Категория": "Одежда и обувь",
                "MCC": 5641.0,
                "Описание": "Varaviksne-veikals",
                "Бонусы (включая кэшбэк)": 39,
                "Округление на инвесткопилку": 0,
                "Сумма операции с округлением": 1985.96,
            },
        ]
    ) == [{"Кешбэк": "0", "Номер карты": "*7197", "Сумма трат": "-66"}]


def test_top_5() -> None:
    """Функция проверяющая работу функции top_five"""

    assert top_five(
        [
            {
                "Дата операции": "14.01.2018 14:10:58",
                "Дата платежа": "15.01.2018",
                "Номер карты": "*7197",
                "Статус": "OK",
                "Сумма операции": -1.0,
                "Валюта операции": "EUR",
                "Сумма платежа": -70.2,
                "Валюта платежа": "RUB",
                "Кэшбэк": 0,
                "Категория": "Рестораны",
                "MCC": 5812.0,
                "Описание": "Luhamaa Terminal  kohvik",
                "Бонусы (включая кэшбэк)": 1,
                "Округление на инвесткопилку": 0,
                "Сумма операции с округлением": 70.2,
            },
            {
                "Дата операции": "14.01.2018 10:43:42",
                "Дата платежа": "15.01.2018",
                "Номер карты": "*7197",
                "Статус": "OK",
                "Сумма операции": -1.42,
                "Валюта операции": "EUR",
                "Сумма платежа": -99.68,
                "Валюта платежа": "RUB",
                "Кэшбэк": 0,
                "Категория": "Супермаркеты",
                "MCC": 5411.0,
                "Описание": 'Rimi Hm "Alfa"',
                "Бонусы (включая кэшбэк)": 1,
                "Округление на инвесткопилку": 0,
                "Сумма операции с округлением": 99.68,
            },
            {
                "Дата операции": "12.01.2018 16:38:58",
                "Дата платежа": "15.01.2018",
                "Номер карты": "*7197",
                "Статус": "OK",
                "Сумма операции": -4.62,
                "Валюта операции": "EUR",
                "Сумма платежа": -324.32,
                "Валюта платежа": "RUB",
                "Кэшбэк": 0,
                "Категория": "Различные товары",
                "MCC": 5311.0,
                "Описание": "Maxima Lv R010",
                "Бонусы (включая кэшбэк)": 6,
                "Округление на инвесткопилку": 0,
                "Сумма операции с округлением": 324.32,
            },
            {
                "Дата операции": "12.01.2018 16:15:56",
                "Дата платежа": "15.01.2018",
                "Номер карты": "*7197",
                "Статус": "OK",
                "Сумма операции": -26.56,
                "Валюта операции": "EUR",
                "Сумма платежа": -1864.51,
                "Валюта платежа": "RUB",
                "Кэшбэк": 0,
                "Категория": "Одежда и обувь",
                "MCC": 5641.0,
                "Описание": "Varaviksne-veikals",
                "Бонусы (включая кэшбэк)": 37,
                "Округление на инвесткопилку": 0,
                "Сумма операции с округлением": 1864.51,
            },
            {
                "Дата операции": "12.01.2018 16:04:18",
                "Дата платежа": "15.01.2018",
                "Номер карты": "*7197",
                "Статус": "OK",
                "Сумма операции": -6.96,
                "Валюта операции": "EUR",
                "Сумма платежа": -488.59,
                "Валюта платежа": "RUB",
                "Кэшбэк": 0,
                "Категория": "Одежда и обувь",
                "MCC": 5641.0,
                "Описание": "Varaviksne-veikals",
                "Бонусы (включая кэшбэк)": 9,
                "Округление на инвесткопилку": 0,
                "Сумма операции с округлением": 488.59,
            },
            {
                "Дата операции": "12.01.2018 15:58:01",
                "Дата платежа": "15.01.2018",
                "Номер карты": "*7197",
                "Статус": "OK",
                "Сумма операции": -28.29,
                "Валюта операции": "EUR",
                "Сумма платежа": -1985.96,
                "Валюта платежа": "RUB",
                "Кэшбэк": 0,
                "Категория": "Одежда и обувь",
                "MCC": 5641.0,
                "Описание": "Varaviksne-veikals",
                "Бонусы (включая кэшбэк)": 39,
                "Округление на инвесткопилку": 0,
                "Сумма операции с округлением": 1985.96,
            },
        ]
    ) == [
        {"Категория": "Одежда и обувь", "Сумма": "-60"},
        {"Категория": "Различные товары", "Сумма": "-4"},
        {"Категория": "Рестораны", "Сумма": "-1"},
        {"Категория": "Супермаркеты", "Сумма": "-1"},
    ]


def test_top_transaction() -> None:
    """Функция проверяющая работу функции top_transaction"""

    assert top_transactions(
        [
            {
                "Дата операции": "14.01.2018 14:10:58",
                "Дата платежа": "15.01.2018",
                "Номер карты": "*7197",
                "Статус": "OK",
                "Сумма операции": -1.0,
                "Валюта операции": "EUR",
                "Сумма платежа": -70.2,
                "Валюта платежа": "RUB",
                "Кэшбэк": 0,
                "Категория": "Рестораны",
                "MCC": 5812.0,
                "Описание": "Luhamaa Terminal  kohvik",
                "Бонусы (включая кэшбэк)": 1,
                "Округление на инвесткопилку": 0,
                "Сумма операции с округлением": 70.2,
            },
            {
                "Дата операции": "14.01.2018 10:43:42",
                "Дата платежа": "15.01.2018",
                "Номер карты": "*7197",
                "Статус": "OK",
                "Сумма операции": -1.42,
                "Валюта операции": "EUR",
                "Сумма платежа": -99.68,
                "Валюта платежа": "RUB",
                "Кэшбэк": 0,
                "Категория": "Супермаркеты",
                "MCC": 5411.0,
                "Описание": 'Rimi Hm "Alfa"',
                "Бонусы (включая кэшбэк)": 1,
                "Округление на инвесткопилку": 0,
                "Сумма операции с округлением": 99.68,
            },
            {
                "Дата операции": "12.01.2018 16:38:58",
                "Дата платежа": "15.01.2018",
                "Номер карты": "*7197",
                "Статус": "OK",
                "Сумма операции": -4.62,
                "Валюта операции": "EUR",
                "Сумма платежа": -324.32,
                "Валюта платежа": "RUB",
                "Кэшбэк": 0,
                "Категория": "Различные товары",
                "MCC": 5311.0,
                "Описание": "Maxima Lv R010",
                "Бонусы (включая кэшбэк)": 6,
                "Округление на инвесткопилку": 0,
                "Сумма операции с округлением": 324.32,
            },
            {
                "Дата операции": "12.01.2018 16:15:56",
                "Дата платежа": "15.01.2018",
                "Номер карты": "*7197",
                "Статус": "OK",
                "Сумма операции": -26.56,
                "Валюта операции": "EUR",
                "Сумма платежа": -1864.51,
                "Валюта платежа": "RUB",
                "Кэшбэк": 0,
                "Категория": "Одежда и обувь",
                "MCC": 5641.0,
                "Описание": "Varaviksne-veikals",
                "Бонусы (включая кэшбэк)": 37,
                "Округление на инвесткопилку": 0,
                "Сумма операции с округлением": 1864.51,
            },
            {
                "Дата операции": "12.01.2018 16:04:18",
                "Дата платежа": "15.01.2018",
                "Номер карты": "*7197",
                "Статус": "OK",
                "Сумма операции": -6.96,
                "Валюта операции": "EUR",
                "Сумма платежа": -488.59,
                "Валюта платежа": "RUB",
                "Кэшбэк": 0,
                "Категория": "Одежда и обувь",
                "MCC": 5641.0,
                "Описание": "Varaviksne-veikals",
                "Бонусы (включая кэшбэк)": 9,
                "Округление на инвесткопилку": 0,
                "Сумма операции с округлением": 488.59,
            },
            {
                "Дата операции": "12.01.2018 15:58:01",
                "Дата платежа": "15.01.2018",
                "Номер карты": "*7197",
                "Статус": "OK",
                "Сумма операции": -28.29,
                "Валюта операции": "EUR",
                "Сумма платежа": -1985.96,
                "Валюта платежа": "RUB",
                "Кэшбэк": 0,
                "Категория": "Одежда и обувь",
                "MCC": 5641.0,
                "Описание": "Varaviksne-veikals",
                "Бонусы (включая кэшбэк)": 39,
                "Округление на инвесткопилку": 0,
                "Сумма операции с округлением": 1985.96,
            },
        ]
    ) == [
        {
            "Дата": "15.01.2018",
            "Категория": "Одежда и обувь",
            "Описание": "Varaviksne-veikals",
            "Сумма": -1985.96,
        },
        {
            "Дата": "15.01.2018",
            "Категория": "Одежда и обувь",
            "Описание": "Varaviksne-veikals",
            "Сумма": -1864.51,
        },
        {
            "Дата": "15.01.2018",
            "Категория": "Одежда и обувь",
            "Описание": "Varaviksne-veikals",
            "Сумма": -488.59,
        },
        {
            "Дата": "15.01.2018",
            "Категория": "Различные товары",
            "Описание": "Maxima Lv R010",
            "Сумма": -324.32,
        },
        {
            "Дата": "15.01.2018",
            "Категория": "Супермаркеты",
            "Описание": 'Rimi Hm "Alfa"',
            "Сумма": -99.68,
        },
        {
            "Дата": "15.01.2018",
            "Категория": "Рестораны",
            "Описание": "Luhamaa Terminal  kohvik",
            "Сумма": -70.2,
        },
    ]


def test_options() -> None:
    """Функция проверяющая работу функции user_option при наличии файла"""

    assert user_options("../user_settings.json") == {
        "user_currencies": ["USD", "EUR"],
        "user_stocks": ["AAPL", "AMZN", "GOOGL", "MSFT", "TSLA"],
    }


def test_options_error() -> None:
    """Функция проверяющая работу функции user_option при ошибочном пути"""

    assert user_options("asas") == [{"error": "Файл не найден!"}]


@patch("requests.get")
def test_value_course(data: Any) -> None:
    """Функция проверяющая работу функции value_course"""

    data.return_value.json.return_value = {
        "success": True,
        "timestamp": 1728756005,
        "base": "RUB",
        "date": "2024-10-12",
        "rates": {"USD": 0.010452, "EUR": 0.009546},
    }
    assert value_course() == [{"currency": "USD", "rate": 0.010452}, {"currency": "EUR", "rate": 0.009546}]


@patch("requests.get")
def test_action_course(data: Any) -> None:
    """Функция проверяющая работу функции action_value"""

    data.return_value.json.return_value = {
        "pagination": {"limit": 100, "offset": 0, "count": 5, "total": 5},
        "data": [
            {
                "open": 229.3,
                "high": 229.41,
                "low": 227.34,
                "close": 227.55,
                "volume": 31668000.0,
                "adj_high": 229.41,
                "adj_low": 227.34,
                "adj_close": 227.55,
                "adj_open": 229.3,
                "adj_volume": 31759188.0,
                "split_factor": 1.0,
                "dividend": 0.0,
                "symbol": "AAPL",
                "exchange": "XNAS",
                "date": "2024-10-11T00:00:00+0000",
            },
            {
                "open": 186.63,
                "high": 189.9284,
                "low": 186.3,
                "close": 188.82,
                "volume": 25751557.0,
                "adj_high": 189.9284,
                "adj_low": 186.3,
                "adj_close": 188.82,
                "adj_open": 186.63,
                "adj_volume": 25751557.0,
                "split_factor": 1.0,
                "dividend": 0.0,
                "symbol": "AMZN",
                "exchange": "XNAS",
                "date": "2024-10-11T00:00:00+0000",
            },
            {
                "open": 162.13,
                "high": 163.9,
                "low": 161.235,
                "close": 163.24,
                "volume": 15344251.0,
                "adj_high": 163.9,
                "adj_low": 161.235,
                "adj_close": 163.24,
                "adj_open": 162.13,
                "adj_volume": 15344251.0,
                "split_factor": 1.0,
                "dividend": 0.0,
                "symbol": "GOOGL",
                "exchange": "XNAS",
                "date": "2024-10-11T00:00:00+0000",
            },
            {
                "open": 416.14,
                "high": 417.13,
                "low": 413.25,
                "close": 416.32,
                "volume": 14126600.0,
                "adj_high": 417.13,
                "adj_low": 413.25,
                "adj_close": 416.32,
                "adj_open": 416.135,
                "adj_volume": 14144944.0,
                "split_factor": 1.0,
                "dividend": 0.0,
                "symbol": "MSFT",
                "exchange": "XNAS",
                "date": "2024-10-11T00:00:00+0000",
            },
            {
                "open": 220.13,
                "high": 223.34,
                "low": 214.38,
                "close": 217.8,
                "volume": 142628874.0,
                "adj_high": 223.34,
                "adj_low": 214.38,
                "adj_close": 217.8,
                "adj_open": 220.13,
                "adj_volume": 142628874.0,
                "split_factor": 1.0,
                "dividend": 0.0,
                "symbol": "TSLA",
                "exchange": "XNAS",
                "date": "2024-10-11T00:00:00+0000",
            },
        ],
    }
    assert action_value() == [
        {"price": 227.55, "symbol": "AAPL"},
        {"price": 188.82, "symbol": "AMZN"},
        {"price": 163.24, "symbol": "GOOGL"},
        {"price": 416.32, "symbol": "MSFT"},
        {"price": 217.8, "symbol": "TSLA"},
    ]
